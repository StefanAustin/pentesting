A lot of tools

john
hashcat
crackstation.net
medusa



john

john --session=s3gJ4gqp --nolog --config=/usr/share/metasploit-framework/data/jtr/john.conf --pot=/root/.msf4/john.pot --format=md5crypt --wordlist=/tmp/jtrtmp20200708-2096-1n28idm --rules=single /tmp/hashes_tmp20200708-2096-rgkgh9


john --wordlist=rockyou.txt --format=md5crypt hashes.txt 

john --format=md5crypt --incremental hashes.txt



Usage: john [OPTIONS] [PASSWORD-FILES]
--single[=SECTION[,..]]    "single crack" mode, using default or named rules
--single=:rule[,..]        same, using "immediate" rule(s)
--wordlist[=FILE] --stdin  wordlist mode, read words from FILE or stdin
                  --pipe   like --stdin, but bulk reads, and allows rules
--loopback[=FILE]          like --wordlist, but extract words from a .pot file
--dupe-suppression         suppress all dupes in wordlist (and force preload)
--prince[=FILE]            PRINCE mode, read words from FILE
--encoding=NAME            input encoding (eg. UTF-8, ISO-8859-1). See also
                           doc/ENCODINGS and --list=hidden-options.
--rules[=SECTION[,..]]     enable word mangling rules (for wordlist or PRINCE
                           modes), using default or named rules
--rules=:rule[;..]]        same, using "immediate" rule(s)
--rules-stack=SECTION[,..] stacked rules, applied after regular rules or to
                           modes that otherwise don't support rules
--rules-stack=:rule[;..]   same, using "immediate" rule(s)
--incremental[=MODE]       "incremental" mode [using section MODE]
--mask[=MASK]              mask mode using MASK (or default from john.conf)
--markov[=OPTIONS]         "Markov" mode (see doc/MARKOV)
--external=MODE            external mode or word filter
--subsets[=CHARSET]        "subsets" mode (see doc/SUBSETS)
--stdout[=LENGTH]          just output candidate passwords [cut at LENGTH]
--restore[=NAME]           restore an interrupted session [called NAME]
--session=NAME             give a new session the NAME
--status[=NAME]            print status of a session [called NAME]
--make-charset=FILE        make a charset file. It will be overwritten
--show[=left]              show cracked passwords [if =left, then uncracked]
--test[=TIME]              run tests and benchmarks for TIME seconds each
--users=[-]LOGIN|UID[,..]  [do not] load this (these) user(s) only
--groups=[-]GID[,..]       load users [not] of this (these) group(s) only
--shells=[-]SHELL[,..]     load users with[out] this (these) shell(s) only
--salts=[-]COUNT[:MAX]     load salts with[out] COUNT [to MAX] hashes
--costs=[-]C[:M][,...]     load salts with[out] cost value Cn [to Mn]. For
                           tunable cost parameters, see doc/OPTIONS
--save-memory=LEVEL        enable memory saving, at LEVEL 1..3
--node=MIN[-MAX]/TOTAL     this node's number range out of TOTAL count
--fork=N                   fork N processes
--pot=NAME                 pot file to use
--list=WHAT                list capabilities, see --list=help or doc/OPTIONS
--format=NAME              force hash of type NAME. The supported formats can
                           be seen with --list=formats and --list=subformats

root@kali:/home/kali# john
John the Ripper 1.9.0-jumbo-1 OMP [linux-gnu 64-bit x86_64 AVX2 AC]         
Copyright (c) 1996-2019 by Solar Designer and others                                     
Homepage: http://www.openwall.com/john/

Usage: john [OPTIONS] [PASSWORD-FILES]
--single[=SECTION[,..]]    "single crack" mode, using default or named rules
--single=:rule[,..]        same, using "immediate" rule(s)
--wordlist[=FILE] --stdin  wordlist mode, read words from FILE or stdin
                  --pipe   like --stdin, but bulk reads, and allows rules
--loopback[=FILE]          like --wordlist, but extract words from a .pot file
--dupe-suppression         suppress all dupes in wordlist (and force preload)
--prince[=FILE]            PRINCE mode, read words from FILE
--encoding=NAME            input encoding (eg. UTF-8, ISO-8859-1). See also
                           doc/ENCODINGS and --list=hidden-options.
--rules[=SECTION[,..]]     enable word mangling rules (for wordlist or PRINCE
                           modes), using default or named rules
--rules=:rule[;..]]        same, using "immediate" rule(s)
--rules-stack=SECTION[,..] stacked rules, applied after regular rules or to
                           modes that otherwise don't support rules
--rules-stack=:rule[;..]   same, using "immediate" rule(s)
--incremental[=MODE]       "incremental" mode [using section MODE]
--mask[=MASK]              mask mode using MASK (or default from john.conf)
--markov[=OPTIONS]         "Markov" mode (see doc/MARKOV)
--external=MODE            external mode or word filter
--subsets[=CHARSET]        "subsets" mode (see doc/SUBSETS)
--stdout[=LENGTH]          just output candidate passwords [cut at LENGTH]
--restore[=NAME]           restore an interrupted session [called NAME]
--session=NAME             give a new session the NAME
--status[=NAME]            print status of a session [called NAME]
--make-charset=FILE        make a charset file. It will be overwritten
--show[=left]              show cracked passwords [if =left, then uncracked]
--test[=TIME]              run tests and benchmarks for TIME seconds each
--users=[-]LOGIN|UID[,..]  [do not] load this (these) user(s) only
--groups=[-]GID[,..]       load users [not] of this (these) group(s) only
--shells=[-]SHELL[,..]     load users with[out] this (these) shell(s) only
--salts=[-]COUNT[:MAX]     load salts with[out] COUNT [to MAX] hashes
--costs=[-]C[:M][,...]     load salts with[out] cost value Cn [to Mn]. For
                           tunable cost parameters, see doc/OPTIONS
--save-memory=LEVEL        enable memory saving, at LEVEL 1..3
--node=MIN[-MAX]/TOTAL     this node's number range out of TOTAL count
--fork=N                   fork N processes
--pot=NAME                 pot file to use
--list=WHAT                list capabilities, see --list=help or doc/OPTIONS
--format=NAME              force hash of type NAME. The supported formats can
                           be seen with --list=formats and --list=subformats

root@kali:/home/kali# john --list=hidden-options
--help                     print usage summary, just like running the command
                           without any parameters
--config=FILE              use FILE instead of john.conf or john.ini
--mem-file-size=SIZE       size threshold for wordlist preload (default 2048 MB)
--format=CLASS             valid classes: dynamic, cpu, omp
--single-seed=WORD[,WORD]  add static seed word(s) for all salts in single mode
--single-wordlist=FILE     *short* wordlist with static seed words/morphemes
--single-retest-guess=BOOL override config for SingleRetestGuess
--subformat=FORMAT         pick a benchmark format for --format=crypt
--mkpc=N                   request a lower max. keys per crypt
--min-length=N             request a minimum candidate length in bytes
--max-length=N             request a maximum candidate length in bytes
--field-separator-char=C   use 'C' instead of the ':' in input and pot files
--fix-state-delay=N        performance tweak, see doc/OPTIONS
--no-log                   disables creation and writing to john.log file
--log-stderr               log to screen instead of file
--bare-always-valid=C      if C is 'Y' or 'y', then the dynamic format will
                           always treat bare hashes as valid
--progress-every=N         emit a status line every N seconds
--crack-status             emit a status line whenever a password is cracked
--keep-guessing            try more candidates for cracked hashes (ie. search
                           for plaintext collisions)
--max-candidates=[-]N      gracefully exit after this many candidates tried.
                           If negative, reset count on each crack
--max-run-time=[-]N        gracefully exit after this many seconds. If
                           negative, reset timer on each crack
--regen-lost-salts=N       brute force unknown salts (see doc/OPTIONS)
--mkv-stats=FILE           "Markov" stats file (see doc/MARKOV)
--reject-printable         reject printable binaries
--verbosity=N              change verbosity (1-5 or 6 for debug, default 3)
--show=formats             show some information about hashes in file (JSON)
--show=types               show some information about hashes in file (custom
                           machine readable format; deprecated)
--show=invalid             show any lines from input that are not valid for
                           selected format(s)
--skip-self-tests          skip self tests
--test-full[=LEVEL]        run more thorough self-tests
--stress-test[=TIME]       loop self tests forever
--input-encoding=NAME      input encoding (alias for --encoding)
--internal-codepage=NAME   codepage used in rules/masks (see doc/ENCODINGS)
--target-encoding=NAME     output encoding (used by format, see doc/ENCODINGS)
--tune=HOW                 tuning options (auto/report/N)
--incremental-charcount=N  override CharCount for incremental mode
--subsets-required[=N]     The N first characters of "subsets" charset are
                           the "required set" (see doc/SUBSETS)
--subsets-min-diff=N       Minimum unique characters in subset
--subsets-max-diff=N       Maximum unique characters in subset (negative N is
                           relative to word length)

PRINCE mode options:
--prince-loopback[=FILE]   fetch words from a .pot file
--prince-elem-cnt-min=N    minimum number of elements per chain (1)
--prince-elem-cnt-max=N    maximum number of elements per chain (8)
--prince-skip=N            initial skip
--prince-limit=N           limit number of candidates generated
--prince-wl-dist-len       calculate length distribution from wordlist
                           instead of using built-in table
--prince-wl-max=N          load only N words from input wordlist
--prince-case-permute      permute case of first letter
--prince-mmap              memory-map infile (not available with case permute)
--prince-keyspace          just show total keyspace that would be produced
                           (disregarding skip and limit)
                           
                           ------------------------
                           
Hashcat is very fast, can use CUDA (GPU)

hashcat [options]... hash|hashfile|hccapxfile [dictionary|mask|directory]...

- [ Basic Examples ] -

  Attack-          | Hash- |
  Mode             | Type  | Example command
 ==================+=======+==================================================================
  Wordlist         | $P$   | hashcat -a 0 -m 400 example400.hash example.dict
  Wordlist + Rules | MD5   | hashcat -a 0 -m 0 example0.hash example.dict -r rules/best64.rule
  Brute-Force      | MD5   | hashcat -a 3 -m 0 example0.hash ?a?a?a?a?a?a
  Combinator       | MD5   | hashcat -a 1 -m 0 example0.hash example.dict example.dict


- [ Hash modes ] -

      #   | Name                                          | Category
   3000 | LM                                               | Operating Systems  >>>
   1000 | NTLM                                           | Operating Systems  >>>  
   5500 | NetNTLMv1                                  | Network Protocols
   5500 | NetNTLMv1+ESS                          | Network Protocols
   5600 | NetNTLMv2                                  | Network Protocols
  
rest see hashcat --help

------------------------------------------------

## Local in Kali: 

/usr/share/wordlists

## Other Resources:

Have I been Pwned

- https://haveibeenpwned.com/Passwords

Seclists: 

- In Kali: apt install seclists
- Usernames: https://github.com/danielmiessler/SecLists/tree/master/Usernames
- Passwords: https://github.com/danielmiessler/SecLists/tree/master/Passwords

Crackstation's Dictionary List: 

- https://crackstation.net/crackstation-wordlist-password-cracking-dictionary.htm

Rainbow Tables (Rainbow Crack):

- http://project-rainbowcrack.com/table.htm

Rocktastic Mega Wordlist:

- https://labs.nettitude.com/tools/rocktastic/

Tools to make your own wordlists: 

- Crunch
- Cewl

-------------

- medusa -h target-ip -u [username] -P ../creds/passwords.txt -M http 

- medusa -h 172.21.0.0 -U [path to username file] -P [path to password file] -M ftp

- medusa -H hosts.txt -U [path to username file] -P [path to password file] -M http 

- medusa -h 172.21.0.0 -U [path to username file] -P [path to password file] -M ssh -n 2222

- medusa -h 172.21.0.0 -U [path to username file] -P [path to password file] -M ftp -O log.txt
